from typing import Any

import pytest

from thermalprinter.constants import CodePage
from thermalprinter.thermalprinter import ThermalPrinter

CODEPAGES = sorted(cp for cp in vars(CodePage) if cp.isupper())
RESULTS = {
    "CP1250": b"42 ???????? aeiuoy \xe9@`?",
    "CP1252": b"42 ???????? aeiuoy \xe9@`\xe0",
    "CP1253": b"42 ???????? aeiuoy ?@`?",
    "CP1254": b"42 ???????? aeiuoy \xe9@`\xe0",
    "CP1255": b"42 ???????? aeiuoy ?@`?",
    "CP1256": b"42 ???????? aeiuoy \xe9@`\xe0",
    "CP1257": b"42 ???????? aeiuoy \xe9@`?",
    "CP1258": b"42 ???????? aeiuoy \xe9@`\xe0",
    "CP437": b"42 ???????? aeiuoy \x82@`\x85",
    "CP720": b"42 ???????? aeiuoy \x82@`\x85",
    "CP737": b"42 ???????? aeiuoy ?@`?",
    "CP755": b"42 \xe7\x8e\xb0\xe4\xbb\xa3\xe6\xb1\x89\xe8\xaf\xad\xe9\x80\x9a\xe7\x94\xa8\xe5\xad\x97\xe8\xa1\xa8 aeiuoy \xc3\xa9@`\xc3\xa0",
    "CP775": b"42 ???????? aeiuoy \x82@`?",
    "CP850": b"42 ???????? aeiuoy \x82@`\x85",
    "CP852": b"42 ???????? aeiuoy \x82@`?",
    "CP855": b"42 ???????? aeiuoy ?@`?",
    "CP856": b"42 ???????? aeiuoy ?@`?",
    "CP857": b"42 ???????? aeiuoy \x82@`\x85",
    "CP858": b"42 ???????? aeiuoy \x82@`\x85",
    "CP860": b"42 ???????? aeiuoy \x82@`\x85",
    "CP862": b"42 ???????? aeiuoy ?@`?",
    "CP863": b"42 ???????? aeiuoy \x82@`\x85",
    "CP864": b"42 ???????? aeiuoy ?@`?",
    "CP865": b"42 ???????? aeiuoy \x82@`\x85",
    "CP866": b"42 ???????? aeiuoy ?@`?",
    "CP874": b"42 ???????? aeiuoy ?@`?",
    "CP932": b"42 ?\x91\xe3??\x92\xca\x97p\x8e\x9a\x95\\ aeiuoy ?@`?",
    "CYRILLIC": b"42 ???????? aeiuoy ?@`?",
    "IRAN": b"42 ???????? aeiuoy \xe9@`\xe0",
    "IRAN2": b"42 \xe7\x8e\xb0\xe4\xbb\xa3\xe6\xb1\x89\xe8\xaf\xad\xe9\x80\x9a\xe7\x94\xa8\xe5\xad\x97\xe8\xa1\xa8 aeiuoy \xc3\xa9@`\xc3\xa0",
    "ISO_8859_1": b"42 ???????? aeiuoy \xe9@`\xe0",
    "ISO_8859_15": b"42 ???????? aeiuoy \xe9@`\xe0",
    "ISO_8859_2": b"42 ???????? aeiuoy \xe9@`?",
    "ISO_8859_3": b"42 ???????? aeiuoy \xe9@`\xe0",
    "ISO_8859_4": b"42 ???????? aeiuoy \xe9@`?",
    "ISO_8859_5": b"42 ???????? aeiuoy ?@`?",
    "ISO_8859_6": b"42 ???????? aeiuoy ?@`?",
    "ISO_8859_7": b"42 ???????? aeiuoy ?@`?",
    "ISO_8859_8": b"42 ???????? aeiuoy ?@`?",
    "ISO_8859_9": b"42 ???????? aeiuoy \xe9@`\xe0",
    "LATVIA": b"42 ???????? aeiuoy \xe9@`?",
    "MIK": b"42 ???????? aeiuoy ?@`?",
    "THAI": b"42 ???????? aeiuoy ?@`?",
    "THAI2": b"42 \xe7\x8e\xb0\xe4\xbb\xa3\xe6\xb1\x89\xe8\xaf\xad\xe9\x80\x9a\xe7\x94\xa8\xe5\xad\x97\xe8\xa1\xa8 aeiuoy \xc3\xa9@`\xc3\xa0",
}


@pytest.mark.parametrize(
    ("value", "expected"),
    [
        (True, b"True"),
        (42, b"42"),
        (42.0, b"42.0"),
        (42j, b"42j"),
        ("42", b"42"),
        (b"42", b"42"),
        (bytearray("42", "utf-8"), b"42"),
        (memoryview(b"42"), b"42"),
    ],
)
def test_builtin_types(value: Any, expected: bytes, printer: ThermalPrinter) -> None:
    assert printer.to_bytes(value) == expected


@pytest.mark.parametrize("codepage", CODEPAGES)
def test_codepage(codepage: str, printer: ThermalPrinter) -> None:
    printer.codepage(getattr(CodePage, codepage))
    assert printer.to_bytes("42 现代汉语通用字表 aeiuoy é@`à") == RESULTS[codepage]
